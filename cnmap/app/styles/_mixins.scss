//
// Mixins
// --------------------------------------------------

@mixin activable($color, $background, $border) {
  color: $color;
  background-color: $background;
  border-color: $border;
  @include transition-linear(all);

  &:hover,
  &:focus,
  &:active,
  &.active {
    color: $color;
    background-color: lighten($background, 5%);
    border-color: darken($border, 12%);
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin border-top-radius($radius) {
  -webkit-border-top-left-radius: $radius;
  -moz-border-top-left-radius: $radius;
  -ms-border-top-left-radius: $radius;
  border-top-left-radius: $radius;

  -webkit-border-top-right-radius: $radius;
  -moz-border-top-right-radius: $radius;
  -ms-border-top-right-radius: $radius;
  border-top-right-radius: $radius;
}

@mixin transition-linear($prop) {
  -webkit-transition: $prop linear $transition-time;
  -moz-transition: $prop linear $transition-time;
  -ms-transition: $prop linear $transition-time;
  -o-transition: $prop linear $transition-time;
  transition: $prop linear $transition-time;
}

@mixin transition-ease-out($prop) {
  -webkit-transition: $prop ease-out $transition-time;
  -moz-transition: $prop ease-out $transition-time;
  -ms-transition: $prop ease-out $transition-time;
  -o-transition: $prop ease-out $transition-time;
  transition: $prop ease-out $transition-time;
}